#include "common.h"
/* R-tool 命令及回复   */


unsigned char SEND_DATA_BUF[200]={0};
short SEND_LENGTH=0;
unsigned char USART_BUF[100]={0};
unsigned char USB_BUF[100]={0};
unsigned short STATUS_APPLY_15693=0x00;
unsigned short STATUS_APPLY_14443a=0x00;
unsigned char STATE=0x00;
unsigned char STATE2=0x00;
//usb 搜索端口命令
const unsigned char usb_out_search[]={0x05,0x06,0xff,0x01,0x00,0x90,0x97};
const unsigned char usb_in_search[] ={0x05,0x11,0x01,0x01,0x00,0x00,0x01,0x29,0x11,0x80,0x01,0x09,0x70,0x19,0x00,0x0e,0xf7,0x18};


//搜索串口发送和接收
const unsigned char rev_uart_search1[] ={0x05,0x07,0xFF,0x01,0x01,0x00,0x82,0x86};
const unsigned char send_uart_search1[]={0x05,0x07,0x01,0x01,0x01,0x0F,0x1C,0xA7};
const unsigned char rev_uart_search2[] ={0x05,0x06,0xFF,0x01,0x00,0x90,0x97};
const unsigned char send_uart_search2[]={0x05,0x11,0x01,0x01,0x00,0x00,0x01,0x29,0x11,0x80,0x01,0x09,0x70,0x19,0x00,0xC5,0x28,0x60};
const unsigned char rev_uart_search3[] ={0x05,0x06,0xFF,0x01,0x00,0x90,0x97};
unsigned char send_uart_search3[]={0x05,0x07,0x01,0x01,0x01,0x0f,0x1c,0xa7};

//打开串口后 查看配置的发送和接收
const unsigned char rev_uart_open0[] ={0xFA,0x05,0xFF,0xC0,0x42,0x39};
const unsigned char send_uart_open0[]={0xFA,0x05,0x01,0xE0,0x58,0xFE};
const unsigned char rev_uart_open1[] ={0xFA,0x08,0xFF,0x00,0x01,0x01,0x01,0xFF,0x8E};
const unsigned char send_uart_open1[]={0xFA,0x17,0x01,0x00,0x01,0x00,0x00,0x01,0x01,0x02,0x02,0x00,0x03,0x01,0x64,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0x95};
const unsigned char rev_uart_open2[] ={0xFA,0x08,0xFF,0x40,0x01,0x02,0x01,0x20,0xB2};
const unsigned char send_uart_open2[]={0xFA,0x17,0x01,0x40,0x01,0x00,0x00,0x01,0x00,0x09,0x00,0x07,0x00,0x10,0x07,0x13,0x01,0x00,0x00,0x00,0x00,0x00,0x80,0x14};	
const unsigned char rev_uart_open3[] ={0xFA,0x08,0xFF,0x00,0x01,0x03,0x01,0x4F,0xBD};
const unsigned char send_uart_open3[]={0xFA,0x17,0x01,0x00,0x01,0x00,0x00,0x01,0x00,0x00,0x00,0xE8,0x03,0x00,0x00,0x00,0x00,0x43,0x83,0x00,0x00,0x00,0x9A,0xBF};
const unsigned char rev_uart_open4[] ={0xFA,0x08,0xFF,0x40,0x01,0x04,0x01,0xF0,0xE6};
const unsigned char send_uart_open4[]={0xFA,0x17,0x01,0x40,0x01,0x00,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xB5,0xE6};	
const unsigned char rev_uart_open5[] ={0xFA,0x08,0xFF,0x00,0x01,0x05,0x01,0x9F,0xE9};
const unsigned char send_uart_open5[]={0xFA,0x17,0x01,0x00,0x01,0x00,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x1E};
const unsigned char rev_uart_open6[] ={0xFA,0x08,0xFF,0x40,0x01,0x06,0x01,0x40,0xD5};
const unsigned char send_uart_open6[]={0xFA,0x17,0x01,0x40,0x01,0x00,0x00,0x01,0x01,0x00,0x03,0x00,0x00,0x01,0x00,0x00,0x00,0x01,0x00,0x01,0x00,0x00,0xD4,0x03};		
const unsigned char rev_uart_open7[] ={0xFA,0x08,0xFF,0x00,0x01,0x07,0x01,0x2F,0xDA};
const unsigned char send_uart_open7[]={0xFA,0x17,0x01,0x00,0x01,0x00,0x00,0x01,0x00,0x00,0x00,0x00,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x52,0xF6};

//没有卡时的回复
const unsigned char no_card_one[]       ={0xFA,0x0C,0x01,0x00,0x31,0x00,0x00,0x00,0x00,0x00,0x00};	
//const unsigned char no_card_two[]       ={0xFA,0x0C,0x01,0x40,0x31,0x00,0x00,0x00,0x00,0x00,0x00,0xA1,0x24};	

//单标签14443a搜索卡命令
const unsigned char one_type_iso14443a_mifara_search_command_one[]={0xFA,0x0B,0xFF,0x00,0x31,0x02,0x01,0x02,0x00,0x00,0x8C,0x69};
const unsigned char one_type_iso14443a_mifara_search_command_two[]={0xFA,0x0B,0xFF,0x40,0x31,0x02,0x01,0x02,0x00,0x00,0x8A,0xAE};

//单标签15693搜索卡命令	
const unsigned char one_type_iso15693_search_command_one[]        ={0xFA,0x0D,0xFF,0x00,0x31,0x02,0x01,0x01,0x00,0x02,0x00,0x00,0xA8,0x86};
const unsigned char one_type_iso15693_search_command_two[]        ={0xFA,0x0D,0xFF,0x40,0x31,0x02,0x01,0x01,0x00,0x02,0x00,0x00,0xCB,0x60};

//多标签――》搜索卡命令
const unsigned char more_type_cycle_search_command_one[]          ={0xFA,0x16,0xFF,0x00,0x31,0x02,0x03,0x06,0x00,0x03,0x00,0x00,0x00,0x02,0x00,0x00,0x01,0x00,0x02,0x00,0x00,0xE2,0x74};
//const unsigned char more_type_cycle_search_command_two[]          ={0xFA,0x16,0xFF,0x40,0x31,0x02,0x03,0x06,0x00,0x03,0x00,0x00,0x00,0x02,0x00,0x00,0x01,0x00,0x02,0x00,0x00,0xED,0xB6};

//多标签――》只读新标签搜索命令
const unsigned char more_type_onlynew_search_command_one[]        ={0xFA,0x16,0xFF,0x00,0x31,0x0A,0x03,0x06,0x00,0x03,0x00,0x00,0x00,0x02,0x00,0x00,0x01,0x00,0x02,0x00,0x00,0x26,0x24};
//const unsigned char more_type_onlynew_search_command_two[]        ={0xFA,0x16,0xFF,0x40,0x31,0x0A,0x03,0x06,0x00,0x03,0x00,0x00,0x00,0x02,0x00,0x00,0x01,0x00,0x02,0x00,0x00,0x29,0xE6};
	
//断开连接 发送命令
const unsigned char send_close_connect_14443a_one[]               ={0xFA,0x07,0xFF,0x00,0x33,0x01,0xC5,0x48};
//const unsigned char send_close_connect_14443a_two[]               ={0xFA,0x07,0xFF,0x40,0x33,0x01,0xB3,0x4E};

//断开连接 接收命令
const unsigned char rev_close_connect_14443a_one[]                ={0xFA,0x08,0x01,0x00,0x33,0x00,0x00,0xA6,0x4B};
//const unsigned char rev_close_connect_14443a_two[]                ={0xFA,0x08,0x01,0x40,0x33,0x00,0x00,0x11,0x5D};

//15693单标签测试 读取UID帧头
const unsigned char send_one_type_15693_start_one[]={0xFA,0x19,0x01,0x00,0x31,0x00,0x00,0x00,0x01,0x00,0x01,0x0E,0x01,0x07,0x09};
//const unsigned char send_one_type_15693_start_two[]={0xFA,0x19,0x01,0x40,0x31,0x00,0x00,0x00,0x01,0x00,0x01,0x0E,0x01,0x07,0x09};

//15693单标签测试  读取数据块标志5-11 21-22
const unsigned char rev_one_type_15693_read_one[] ={0x34,0x00,0x00,0x01,0x07,0x09,0x01,0x03,0x00};
//const unsigned char send_one_type_15693_read_two[]={};

//15693单标签测试  写数据块标志
const unsigned char rev_one_type_15693_write_one[]={0x34,0x00,0x00,0x01,0x07,0x09,0x01,0x04,0x00};
//const unsigned char send_one_type_15693_write_two[]={};

//15693 单标签测试 写AFI和写DSFID共同部分
const unsigned char rev_one_type_15693_write_AFI1_DSFID[]={0xfa,0x18,0xff,0x00,0x34,0x00,0x00,0x01,0x07,0x09,0x01};
const unsigned char rev_one_type_15693_write_AFI2_DSFID[]={0xfa,0x18,0xff,0x40,0x34,0x00,0x00,0x01,0x07,0x09,0x01};

//15693 单标签测试 写AFI命令
const unsigned char rev_one_type_15693_write_AFI[]={0x03,0x06,0x00};

//15693 单标签测试 写DSFID
const unsigned char rev_one_type_15693_write_DSFID[]={0x03,0x08,0x00};

//15693 单标签测试 锁AFI和锁DSFID共同部分
const unsigned char rev_one_type_15693_lock_AFI1_DSFID[]={0xfa,0x17,0xff,0x00,0x34,0x00,0x00,0x01,0x07,0x09,0x01};
const unsigned char rev_one_type_15693_lock_AFI2_DSFID[]={0xfa,0x17,0xff,0x40,0x34,0x00,0x00,0x01,0x07,0x09,0x01};


//15693 单标签测试 锁AFI命令
const unsigned char rev_one_type_15693_lock_AFI[]={0x02,0x07,0x00};
//15693 单标签测试 锁DSFID命令
const unsigned char rev_one_type_15693_lock_DSFID[]={0x02,0x09,0x00};

//15693 单标签测试 锁数据块
const unsigned char rev_one_type_15693_lock_data_block1[]={0xfa,0x1b,0xff,0x00,0x34,0x00,0x00,0x01,0x07,0x09,0x01};
const unsigned char rev_one_type_15693_lock_data_block2[]={0xfa,0x1b,0xff,0x40,0x34,0x00,0x00,0x01,0x07,0x09,0x01};

//15693 单标签测试 锁数据块命令
const unsigned char rev_one_type_15693_lock_block[]={0x06,0x05,0x00};
	
//15693单标签测试  读取数据块标志5-11 21-22
const unsigned char send_one_type_15693_read_one[] ={0xfa,0x00,0x01,0x00,0x34,0x00,0x00,0x00,0x03,0x00,0x01,0x00,0x00};
//const unsigned char send_one_type_15693_read_two[]={};

//15693单标签测试  写数据块标志
const unsigned char send_one_type_15693_write_one[]={0xfa,0x0c,0x01,0x00,0x34,0x00,0x00,0x03,0x04,0x00,0x01};
//const unsigned char send_one_type_15693_write_two[]={};

//15693读取数据块错误
const unsigned char  read_one_type_err_15693[]={0xfa,0x0e,0x01,0x00,0x34,0x00,0x00,0x05,0x03,0x00,0x00,0x04,0x00};

//15693写入数据块失败
const unsigned char write_one_type_err_15693[]={0xfa,0x0e,0x01,0x00,0x34,0x00,0x00,0x05,0x04,0x00,0x00,0x04,0x00};

//15693写AFI成功
const unsigned char write_AFI_suc[]={0xfa,0x0c,0x01,0x00,0x34,0x00,0x00,0x03,0x06,0x00,0x01};

//15693写AFI失败
const unsigned char write_AFI_err[]={0xfa,0x0e,0x01,0x00,0x34,0x00,0x00,0x05,0x06,0x00,0x00,0x04,0x00};	
	
//15693写DSFID成功
const unsigned char write_DSFID_suc[]={0xfa,0x0c,0x01,0x00,0x34,0x00,0x00,0x03,0x08,0x00,0x01};

//15693写DSFID失败
const unsigned char write_DSFID_err[]={0xfa,0x0e,0x01,0x00,0x34,0x00,0x00,0x05,0x08,0x00,0x00,0x04,0x00};	


//15693锁AFI成功
const unsigned char lock_AFI_suc[]={0xfa,0x0c,0x01,0x00,0x34,0x00,0x00,0x03,0x07,0x00,0x01};

//15693锁AFI失败
const unsigned char lock_AFI_err[]={0xfa,0x0e,0x01,0x00,0x34,0x00,0x00,0x05,0x07,0x00,0x00,0x04,0x00};	
	
//15693锁DSFID成功
const unsigned char lock_DSFID_suc[]={0xfa,0x0c,0x01,0x00,0x34,0x00,0x00,0x03,0x09,0x00,0x01};

//15693锁DSFID失败
const unsigned char lock_DSFID_err[]={0xfa,0x0e,0x01,0x00,0x34,0x00,0x00,0x05,0x09,0x00,0x00,0x04,0x00};	

//15693锁数据块成功
const unsigned char lock_block_suc[]={0xfa,0x0c,0x01,0x00,0x34,0x00,0x00,0x03,0x05,0x00,0x01};

//15693锁数据块失败
const unsigned char lock_block_err[]={0xfa,0x0e,0x01,0x00,0x34,0x00,0x00,0x05,0x05,0x00,0x00,0x04,0x00};




//14443A单标签测试 读取UID帧头
const unsigned char send_one_type_14443a_start_one[]={0xFA,0x14,0x01,0x00,0x31,0x00,0x00,0x00,0x01,0x00,0x01,0x0E,0x02,0x02,0x04};
//const unsigned char send_one_type_14443a_start_two[]={0xFA,0x14,0x01,0x40,0x31,0x00,0x00,0x00,0x01,0x00,0x01,0x0E,0x02,0x02,0x04};

//14443A单标签测试  连接
const unsigned char rev_one_type_14443a_connect_order[]={0x32,0x00,0x02,0x02,0x04};

//14443A单标签测试  断开连接
const unsigned char rec_one_type_14443a_disconnect[]={0xfa,0x07,0xff,0x00,0x33,0x01};

const unsigned char send_one_type_14443a_disconnect_one[]={0xfa,0x08,0x01,0x00,0x33,0x00,0x00,0xa6,0x4b};
const unsigned char send_one_type_14443a_disconnect_two[]={0xfa,0x08,0x01,0x40,0x33,0x00,0x00,0x11,0x5d};

//14443A单标签测试  连接成功
const unsigned char send_one_type_14443a_connect_suc[]={0xfa,0x09,0x01,0x00,0x32,0x00,0x00,0x01};

//14443A单标签测试  连接失败
const unsigned char send_one_type_14443a_connect_err[]={0xfa,0x08,0x01,0x00,0x32,0x04,0x00};

//14443A单标签测试  认证命令
const unsigned char rev_one_type_14443a_auth[]={0x34,0x01,0x0b,0x15,0x00};

//14443A单标签测试  认证失败
const unsigned char send_one_type_14443a_err[]={0xfa,0x0e,0x01,0x00,0x34,0x00,0x00,0x05,0x15,0x00,0x00,0x04,0x00};

//14443A单标签测试  认证成功
const unsigned char send_one_type_14443a_suc[]={0xfa,0x0c,0x01,0x00,0x34,0x00,0x00,0x03,0x15,0x00,0x01};


//14443a单标签测试   读数据块
const unsigned  char rev_one_type_14443a_read[]={0xfa,0x0d,0xff,0x00,0x34,0x01,0x05,0x16,0x00};

const unsigned char send_one_type_14443a_read_suc[]={0xfa,0x1c,0x01,0x00,0x34,0x00,0x00,0x13,0x16,0x00,0x01};
//读取失败
const unsigned char send_one_type_14443a_read_err[]   ={0xfa,0x0e,0x01,0x00,0x34,0x00,0x00,0x05,0x16,0x00,0x00,0x00,0x04};
//卡被拿走了
const unsigned char send_one_type_14443a_read_err_no[]={0xfa,0x0e,0x01,0x00,0x34,0x00,0x00,0x05,0x16,0x00,0x00,0x04,0x00};

//14443a单标签测试   写数据块
const unsigned char rev_one_type_14443a_write[]={0xfa,0x1d,0xff,0x00,0x34,0x01,0x15,0x17,0x00};

const unsigned char send_one_type_14443a_write_suc[]={0xfa,0x0c,0x01,0x00,0x34,0x00,0x00,0x03,0x17,0x00,0x01};
//写入失败
const unsigned char send_one_type_14443a_write_err[]={0xfa,0x0e,0x01,0x00,0x34,0x00,0x00,0x05,0x17,0x00,0x00,0x00,0x04};
//卡被拿走了
const unsigned char send_one_type_14443a_write_err_no[]={0xfa,0x0e,0x01,0x00,0x34,0x00,0x00,0x05,0x16,0x00,0x00,0x04,0x00};



//多标签测试

//请求UID命令     区别在第6位  只读新标签为 0x0a  通常情况为  0x02
const unsigned char rev_many_type_UID[]           ={0xfa,0x16,0xff,0x00,0x31,0x0a,0x03,0x06,0x00,0x03,0x00,0x00,0x00,0x02,0x00,0x00,0x01,0x00,0x02,0x00,0x00};
//const unsigned char rev_many_type_normal_UID[]  ={0xfa,0x16,0xff,0x00,0x31,0x02,0x03,0x06,0x00,0x03,0x00,0x00,0x00,0x02,0x00,0x00,0x01,0x00,0x02,0x00,0x00};

	
//发送UID命令 
//第二位数据长度的计算公式send_many_type_UID[1]=12+15693卡数*13+14443a卡数*8;
//send_many_type_UID[8]和 send_many_type_UID[10]为14443a和15693卡的总共数量
const unsigned char send_many_type_UID[]={0xfa,0x00,0x01,0x00,0x31,0x00,0x00,0x00,0x00,0x00,0x00};
//15693卡第一个UID用 0e 01 07 09隔开 如果后面还有15693卡都用00 0e 01 07 09 隔开，如果没有就用00+校验位。 00的位置计算公式为10+13*15693卡的数量
const unsigned char send_many_type_15693_space_mark[] ={0x00,0x0e,0x01,0x07,0x09};
//当14443a卡前面有15693卡时，用00 0e 02 02 04隔开。后面还有14443a卡时用0e 02 02 04隔开。
//当前面没有15693卡时，用0e 02 02 04隔开，后面还有14443a卡时用0e 02 02 04隔开
const unsigned char send_many_type_14443a_space_mark[]={0x0e,0x02,0x02,0x04};









